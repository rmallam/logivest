services:
  - type: web
    name: real-estate-analyzer
    env: python
    buildCommand: |
      # Render Deployment with MCP and Gemini Support
      echo "üöÄ Starting Real Estate Analyzer build..."
      
      # Upgrade pip and build tools
      pip install --upgrade pip wheel setuptools
      
      # Try fixed requirements first (optimized for compatibility)
      echo "üì¶ Installing fixed requirements..."
      pip install -r requirements-fixed.txt || echo "‚ö†Ô∏è Fixed requirements failed, trying main requirements..."
      
      # Fallback to main requirements
      pip install -r requirements.txt || echo "‚ö†Ô∏è Main requirements failed, trying minimal..."
      
      # Final fallback to minimal requirements
      pip install -r requirements-minimal.txt || echo "‚ùå All requirements failed"
      
      # Verify critical packages
      python -c "import flask; print('‚úÖ Flask available')" || echo "‚ùå Flask missing"
      python -c "import mcp; print('‚úÖ MCP available')" || echo "‚ö†Ô∏è MCP missing - some features disabled"
      python -c "import google.generativeai; print('‚úÖ Gemini AI available')" || echo "‚ö†Ô∏è Gemini AI missing - AI features disabled"
      
      echo "üéØ Build complete!"
    startCommand: python web_interface/app.py
    envVars:
      - key: WEB_INTERFACE_PORT
        value: 5001
      - key: FLASK_ENV
        value: production
      - key: PIP_NO_CACHE_DIR
        value: "1"
      - key: SETUPTOOLS_USE_DISTUTILS
        value: stdlib
    healthCheckPath: /
